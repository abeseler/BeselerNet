@attribute [Route(Routes.ForgotPassword)]
@attribute [AllowAnonymous]
@inject NavigationManager _navigation
@inject HttpClient _http

<PageTitle>BSLR: Forgot Password</PageTitle>

<div class="mask d-flex align-items-center">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                <div class="card" style="border-radius: 15px;">
                    <div class="card-body p-4">

                        <EditForm EditContext="_context" OnValidSubmit="Submit" FormName="ForgotPassword">
                            <DataAnnotationsValidator />

                            <h2 class="text-uppercase text-center mb-5">Forgot Password</h2>

                            <TimedAlert Message="@_errorMessage" ShowUntil="@_showUntil" />

                            <div class="form-outline mb-4">
                                <label class="form-label" for="Input_Email">Email</label>
                                <InputText tabindex="1" type="email" id="Input_Email" class="form-control form-control-lg" @ref="_firstInput" @bind-Value="_model.Email" />
                                <ValidationMessage For="@(() => _model.Email)" />
                            </div>

                            @if (_isProcessing)
                            {
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="d-flex justify-content-center">
                                    <button tabindex="2" type="submit" class="btn btn-primary btn-lg">Send Reset Email</button>
                                </div>
                            }

                            <p class="text-center text-muted mt-5">Don't have an account? <a href="@Routes.Login" class="link fw-bold"><u>Back to login</u></a></p>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm] private FormModel _model { get; set; } = new();
    private EditContext? _context;
    private InputText? _firstInput;
    private string? _errorMessage;
    private DateTime? _showUntil;
    private bool _isProcessing;

    private class FormModel
    {
        [Required(ErrorMessage = "Email is required!"), EmailAddress]
        public string? Email { get; set; }
    }

    protected override void OnInitialized() => _context = new(_model);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _firstInput?.Element is not null)
            await _firstInput.Element.Value.FocusAsync();
    }

    private async Task Submit()
    {
        _isProcessing = true;
        try
        {
            var url = $"{Endpoints.Accounts.ResetPassword}?email={WebUtility.UrlEncode(_model.Email)}";
            _model.Email = null;
            var response = await _http.GetAsync(url);
            if (response.IsSuccessStatusCode is false)
            {
                _errorMessage = "An error occurred while trying to send the reset email. Please try again later.";
                _showUntil = DateTime.Now.AddSeconds(8);
                return;
            }

            _navigation.NavigateTo(Routes.ResetPassword);
        }
        finally
        {
            _isProcessing = false;
        }
    }
}
